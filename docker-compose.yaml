version: "3.9"
services:
  db:
    image: postgres:15.2-alpine3.17
    environment:
      POSTGRES_PASSWORD: p0stgr3s
      POSTGRES_USER: posts
    volumes:
      - ./seed.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U posts"]
      interval: 3s
      timeout: 5s
      retries: 5
  db_ui:
    image: sosedoff/pgweb:0.13.1
    depends_on: 
      db:
        condition: service_healthy
    ports: 
      - "3001:8081" 
    environment:
      - PGWEB_DATABASE_URL=postgresql://posts:p0stgr3s@db:5432/posts?sslmode=disable
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:3000"
    depends_on:
      db:
        condition: service_healthy
  air_api:
    image: cosmtrek/air
    working_dir: /app
    ports:
      - "3000:3000"
    healthcheck:
      test: curl -fsS localhost:3000/health
    volumes:
      - ./:/app
    depends_on:
      db:
        condition: service_healthy
  jaeger-all-in-one:
    image: jaegertracing/all-in-one:latest
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "9411:9411"
      - "14250:14250"

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.53.0
    command: ["--config=/conf/collector-config.yaml"]
    volumes:
      - ./collector-config.yaml:/conf/collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "55679:55679" # zpages extension
    depends_on:
      - jaeger-all-in-one

  prometheus:
    image: prom/prometheus:latest
    restart: always
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"